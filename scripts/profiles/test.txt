function(allstates, event)
    -- Initialize aura environment variables if not exists
    aura_env.last = aura_env.last or 0
    aura_env.marks = aura_env.marks or {}
    aura_env.castEndTimes = aura_env.castEndTimes or {}
    
    -- Performance throttling (0.2s)
    if not aura_env.last or GetTime() - aura_env.last > 0.2 then
        aura_env.last = GetTime()
        
        -- Constants
        local MARKS = {8, 7, 2, 3, 6, 4, 1, 5}  -- Skull, Cross, Circle, Diamond, Square, Moon, Star, Triangle
        local DIAMOND = 3  -- Reserved for interruptible casts
        
        -- Initialize spell categories if not exists
        if not aura_env.SPELL_CATEGORIES then
            aura_env.SPELL_CATEGORIES = {
                HEALING_SPELLS = {
                    -- === PRIEST HEALS ===
                    [2050] = true, [2052] = true, [2053] = true,  -- Lesser Heal Series
                    [2054] = true, [2055] = true, [6063] = true, [6064] = true,  -- Heal Series
                    [2060] = true, [10963] = true, [10964] = true, [10965] = true,  -- Greater Heal Series
                    [139] = true, [6074] = true, [6075] = true, [6076] = true, [6077] = true, [6078] = true,  -- Renew Series
                    [596] = true, [996] = true, [10960] = true, [10961] = true,  -- Prayer of Healing Series
                    -- === SHAMAN HEALS ===
                    [547] = true, [913] = true, [939] = true, [959] = true, [8005] = true, [10395] = true, [10396] = true,  -- Healing Wave Series
                    [1064] = true, [10622] = true, [10623] = true,  -- Chain Heal Series
                    -- === DRUID HEALS ===
                    [5185] = true, [5186] = true, [5187] = true, [5188] = true, [5189] = true, [6778] = true, [8903] = true, [9758] = true, [9888] = true, [9889] = true,  -- Healing Touch Series
                    [774] = true, [1058] = true, [1430] = true, [2090] = true, [2091] = true, [3627] = true, [8910] = true, [9839] = true, [9840] = true, [9841] = true,  -- Rejuvenation Series
                    [8936] = true, [8938] = true, [8939] = true, [8940] = true, [8941] = true, [9750] = true, [9856] = true, [9857] = true, [9858] = true,  -- Regrowth Series
                    -- === PALADIN HEALS ===
                    [635] = true, [639] = true, [647] = true, [1026] = true, [1042] = true, [3472] = true, [10328] = true, [10329] = true, [25292] = true,  -- Holy Light Series
                    [19750] = true, [19939] = true, [19940] = true, [19941] = true, [19942] = true, [19943] = true,  -- Flash of Light Series
                    -- === DUNGEON/RAID SPECIFIC ===
                    [8362] = true, [11642] = true,  -- Ragefire Chasm
                    [23381] = true, [23382] = true,  -- Wailing Caverns
                    [12039] = true, [7106] = true, [12380] = true,  -- Shadowfang Keep
                    [13864] = true, [15586] = true,  -- Blackrock Depths
                    [23954] = true, [22883] = true,  -- Molten Core
                    [23397] = true, [23398] = true,  -- Blackwing Lair
                    -- Holy/Divine Spells
                    [585] = true,    -- Smite (Rank 1)
                    [591] = true,    -- Smite (Rank 2)
                    [598] = true,    -- Smite (Rank 3)
                    [984] = true,    -- Smite (Rank 4)
                    [1004] = true,   -- Smite (Rank 5)
                    [6060] = true,   -- Smite (Rank 6)
                    [15238] = true,  -- Holy Fire
                    [15263] = true,  -- Holy Fire (Greater)
                    [15264] = true,  -- Holy Fire (Major)
                    [25054] = true,  -- Holy Bolt
                    
                    -- Curse/Disease Spells
                    [172] = true,    -- Corruption
                    [6222] = true,   -- Corruption (Greater)
                    [6223] = true,   -- Corruption (Major)
                    [7645] = true,   -- Corruption (Massive)
                    [18376] = true,  -- Corruption (Epic)
                    [980] = true,    -- Curse of Agony
                    [1014] = true,   -- Curse of Agony (Greater)
                    [6217] = true,   -- Curse of Agony (Major)
                    [11711] = true,  -- Curse of Agony (Massive)
                    
                    -- Physical/Special Attacks
                    [6546] = true,   -- Rend
                    [6547] = true,   -- Rend (Greater)
                    [6548] = true,   -- Rend (Major)
                    [11977] = true,  -- Rend (Massive)
                    [13445] = true,  -- Rend (Epic)
                    [8242] = true,   -- Shield Slam
                    [11972] = true,  -- Shield Bash
                    [15655] = true,  -- Shield Slam (Greater)
                    
                    -- Raid Boss Specific
                    -- Molten Core
                    [19775] = true,  -- Magma Blast
                    [19776] = true,  -- Magma Blast (Greater)
                    [20228] = true,  -- Lava Burst
                    [20229] = true,  -- Blast Wave
                    [19780] = true,  -- Hand of Ragnaros
                    [19781] = true,  -- Melt Weapon
                    
                    -- Blackwing Lair
                    [23331] = true,  -- Flame Breath
                    [23332] = true,  -- Shadow Flame
                    [22539] = true,  -- Shadow Bolt Volley
                    [22559] = true,  -- Brood Power
                    [23461] = true,  -- Vaelastrasz's Flame Breath
                    
                    -- Onyxia's Lair
                    [18431] = true,  -- Bellowing Roar
                    [18435] = true,  -- Flame Breath
                    [18500] = true,  -- Wing Buffet
                    [18392] = true,  -- Fireball Volley
                    
                    -- AQ20/40
                    [25812] = true,  -- Toxic Volley
                    [25786] = true,  -- Poison Bolt
                    [25807] = true,  -- Great Heal
                    [26580] = true,  -- Fear
                    [25685] = true,  -- Energize
                    
                    -- Dungeon Boss Spells
                    -- Ragefire Chasm
                    [14032] = true,  -- Shadow Word: Pain (Taragaman)
                    [14868] = true,  -- Curse of Agony (Oggleflint)
                    [14875] = true,  -- Curse of Taragaman
                    
                    -- Wailing Caverns
                    [8040] = true,   -- Druid's Slumber
                    [8142] = true,   -- Grasping Vines
                    [7967] = true,   -- Naralex's Nightmare
                    [8150] = true,   -- Thundercrack
                    
                    -- Deadmines
                    [5213] = true,   -- Molten Metal
                    [6304] = true,   -- Rhahk'Zor Slam
                    [6435] = true,   -- Smite Slam
                    [6432] = true,   -- Smite Stomp
                    [6136] = true,   -- Chained Bolt
                    
                    -- Shadowfang Keep
                    [7068] = true,   -- Shadow Bolt (Shadowfang Darksoul)
                    [7109] = true,   -- Shadow Bolt Volley (Lord Walden)
                    [7621] = true,   -- Arugal's Curse
                    [7803] = true,   -- Thundershock
                    [7074] = true,   -- Screams of the Past
                    
                    -- Stockades
                    [7964] = true,   -- Smoke Bomb
                    [6466] = true,   -- Axe Toss
                    [7165] = true,   -- Battle Shout (Targorr)
                    
                    -- Razorfen Kraul
                    [8150] = true,   -- Thundercrack
                    [6524] = true,   -- Ground Tremor
                    [8362] = true,   -- Renew
                    [8363] = true,   -- Parasite
                    
                    -- Gnomeregan
                    [10831] = true,  -- Mind Control (Electrocutioner 6000)
                    [11820] = true,  -- Electrified Net
                    [11821] = true,  -- Electrified Chain
                    [10732] = true,  -- Radiation Bolt
                    
                    -- Scarlet Monastery
                    [9034] = true,   -- Immolate (Interrogator Vishas)
                    [9256] = true,   -- Deep Sleep
                    [9435] = true,   -- Deathly Silence
                    [9438] = true,   -- Arcane Explosion (Arcanist Doan)
                    
                    -- Razorfen Downs
                    [12882] = true,  -- Wing Flap
                    [12946] = true,  -- Putrid Stench
                    [12944] = true,  -- Plagues Cloud
                    [12889] = true,  -- Curse of Blood
                    
                    -- Uldaman
                    [11836] = true,  -- Freeze Solid
                    [3356] = true,   -- Flame Lash
                    [11902] = true,  -- Grim Ward
                    [10093] = true,  -- Harsh Winds
                    
                    -- Zul'Farrak
                    [11836] = true,  -- Freeze Solid
                    [11902] = true,  -- Grim Ward
                    [11091] = true,  -- Curse of Hydross
                    [11089] = true,  -- Theka Transform
                    
                    -- Maraudon
                    [21808] = true,  -- Landslide
                    [21869] = true,  -- Repulsive Gaze
                    [21909] = true,  -- Dust Field
                    [21832] = true,  -- Boulder
                    
                    -- Temple of Atal'Hakkar
                    [12889] = true,  -- Curse of Blood
                    [12888] = true,  -- Cause Insanity
                    [12890] = true,  -- Deep Slumber
                    [12891] = true,  -- Cone of Fire
                    
                    -- Blackrock Depths
                    [15585] = true,  -- Chain Lightning
                    [15305] = true,  -- Chain Lightning (Emperor)
                    [15587] = true,  -- Mind Blast
                    [15586] = true,  -- Heal
                    
                    -- Dire Maul
                    [22651] = true,  -- Sacrifice
                    [22419] = true,  -- Ley Line
                    [22425] = true,  -- Arcane Bolt
                    [22424] = true,  -- Arcane Lightning
                    
                    -- Stratholme
                    [17293] = true,  -- Burning Winds
                    [17366] = true,  -- Fire Nova
                    [17405] = true,  -- Domination
                    [17471] = true,  -- Shadow Portal
                    
                    -- Scholomance
                    [18099] = true,  -- Chill Nova
                    [18103] = true,  -- Backhand
                    [18431] = true,  -- Bellowing Roar
                    [18435] = true,  -- Flame Breath
                },
                
                CC_SPELLS = {
                    -- Stun Effects
                    [5211] = true,   -- Bash
                    [6798] = true,   -- Bash (Greater)
                    [8983] = true,   -- Bash (Major)
                    [9005] = true,   -- Pounce
                    [9823] = true,   -- Pounce (Greater)
                    [9827] = true,   -- Pounce (Major)
                    
                    -- Fear Effects
                    [5782] = true,   -- Fear
                    [6213] = true,   -- Fear (Greater)
                    [6215] = true,   -- Fear (Major)
                    [5484] = true,   -- Howl of Terror
                    [17928] = true,  -- Howl of Terror (Greater)
                    [6358] = true,   -- Seduction
                    [6359] = true,   -- Seduction (Greater)
                    
                    -- Freeze Effects
                    [122] = true,    -- Frost Nova
                    [865] = true,    -- Frost Nova (Greater)
                    [6131] = true,   -- Frost Nova (Major)
                    [10230] = true,  -- Frost Nova (Massive)
                    [3355] = true,   -- Freezing Trap
                    [14308] = true,  -- Freezing Trap (Greater)
                    [14309] = true,  -- Freezing Trap (Major)
                    
                    -- Sleep/Incapacitate
                    [2637] = true,   -- Hibernate
                    [18657] = true,  -- Hibernate (Greater)
                    [18658] = true,  -- Hibernate (Major)
                    [700] = true,    -- Sleep
                    [1090] = true,   -- Sleep (Greater)
                    [8399] = true,   -- Sleep (Major)
                    
                    -- Root Effects
                    [339] = true,    -- Entangling Roots
                    [1062] = true,   -- Entangling Roots (Greater)
                    [5195] = true,   -- Entangling Roots (Major)
                    [5196] = true,   -- Entangling Roots (Massive)
                    [11922] = true,  -- Entangling Roots (Epic)
                    
                    -- Polymorph
                    [118] = true,    -- Polymorph
                    [12824] = true,  -- Polymorph (Greater)
                    [12825] = true,  -- Polymorph (Major)
                    [12826] = true,  -- Polymorph (Massive)
                    
                    -- Mind Control
                    [605] = true,    -- Mind Control
                    [10911] = true,  -- Mind Control (Greater)
                    [10912] = true,  -- Mind Control (Major)
                    
                    -- Banish
                    [710] = true,    -- Banish
                    [18647] = true,  -- Banish (Greater)
                    
                    -- Special CC
                    [6726] = true,   -- Silence
                    [15487] = true,  -- Silence (Greater)
                    [6358] = true,   -- Seduction
                    [6359] = true,   -- Seduction (Greater)
                    [8122] = true,   -- Psychic Scream
                    [8124] = true,   -- Psychic Scream (Greater)
                    [10888] = true,  -- Psychic Scream (Major)
                    [10890] = true,  -- Psychic Scream (Massive)
                },
                
                BUFF_SPELLS = {
                    -- Defensive Buffs
                    [642] = true,    -- Divine Shield
                    [1020] = true,   -- Divine Shield (Greater)
                    [1022] = true,   -- Blessing of Protection
                    [5599] = true,   -- Blessing of Protection (Greater)
                    [10278] = true,  -- Blessing of Protection (Major)
                    [17] = true,     -- Power Word: Shield
                    [592] = true,    -- Power Word: Shield (Greater)
                    [600] = true,    -- Power Word: Shield (Major)
                    
                    -- Offensive Buffs
                    [1459] = true,   -- Arcane Intellect
                    [1460] = true,   -- Arcane Intellect (Greater)
                    [1461] = true,   -- Arcane Intellect (Major)
                    [23028] = true,  -- Arcane Brilliance
                    [27127] = true,  -- Arcane Brilliance (Greater)
                    
                    -- Raid Boss Buffs
                    [19451] = true,  -- Enrage
                    [19516] = true,  -- Rage
                    [22686] = true,  -- Bellowing Roar
                    [23128] = true,  -- Frenzy
                    [23537] = true,  -- Enrage
                },
                
                SUMMON_SPELLS = {
                    -- Warlock Summons
                    [688] = true,    -- Summon Imp
                    [697] = true,    -- Summon Voidwalker
                    [712] = true,    -- Summon Succubus
                    [691] = true,    -- Summon Felhunter
                    
                    -- Mage Summons
                    [31687] = true,  -- Summon Water Elemental
                    
                    -- Boss Summons
                    [20477] = true,  -- Summon Ragnaros
                    [20478] = true,  -- Summon Sons of Flame
                    [20479] = true,  -- Summon Fire Elemental
                    [20480] = true,  -- Summon Core Hound
                    
                    -- Misc Summons
                    [16590] = true,  -- Summon Zombie
                    [16777] = true,  -- Summon Skeleton
                    [17231] = true,  -- Summon Bone Minions
                    [17618] = true,  -- Summon Carrion Beetles
                }
            }
        end
        
        -- Spell priority definitions
        local SPELL_PRIORITY = {
            HEALING_SPELLS = 4,  -- Highest priority
            CC_SPELLS = 3,
            BUFF_SPELLS = 2,
            SUMMON_SPELLS = 1    -- Lowest priority
        }
        
        -- Tracking tables
        local currentEnemies = {}
        local markedEnemies = {}    
        local unmarkedEnemies = {}
        local castingEnemies = {}
        local castingUnits = {}
        
        -- Helper Functions
        local function IsRogueCCd(unit)
            local ROGUE_CC = {"Sap", "Blind", "Gouge"}
            for _, ccType in ipairs(ROGUE_CC) do
                if AuraUtil.FindAuraByName(ccType, unit, "HARMFUL") then
                    return true
                end
            end
            return false
        end
        
        local function getSpellPriority(unit)
            -- Check both casting and channeling
            local spellName, _, _, _, endTime, _, _, notInterruptible = UnitCastingInfo(unit)
            local isChanneling = false
            
            if not spellName then
                spellName, _, _, _, endTime, _, notInterruptible = UnitChannelInfo(unit)
                isChanneling = spellName ~= nil
            end
            
            if not spellName or notInterruptible then 
                return 0, nil, nil 
            end
            
            -- Check if within interrupt range (15 yards)
            if not CheckInteractDistance(unit, 3) then 
                return 0, nil, nil 
            end
            
            -- Get spell ID
            local spellID = select(7, GetSpellInfo(spellName))
            if not spellID then 
                return SPELL_PRIORITY.SUMMON_SPELLS, spellName, endTime/1000 
            end
            
            -- Check spell categories
            if aura_env.SPELL_CATEGORIES.HEALING_SPELLS[spellID] then
                return SPELL_PRIORITY.HEALING_SPELLS, spellName, endTime/1000
            elseif aura_env.SPELL_CATEGORIES.CC_SPELLS[spellID] then
                return SPELL_PRIORITY.CC_SPELLS, spellName, endTime/1000
            elseif aura_env.SPELL_CATEGORIES.BUFF_SPELLS[spellID] then
                return SPELL_PRIORITY.BUFF_SPELLS, spellName, endTime/1000
            elseif aura_env.SPELL_CATEGORIES.SUMMON_SPELLS[spellID] then
                return SPELL_PRIORITY.SUMMON_SPELLS, spellName, endTime/1000
            end
            
            return SPELL_PRIORITY.SUMMON_SPELLS, spellName, endTime/1000
        end
        
        -- Clean up expired casts
        local currentTime = GetTime()
        for guid, endTime in pairs(aura_env.castEndTimes) do
            if currentTime > endTime then
                aura_env.castEndTimes[guid] = nil
            end
        end
        
        -- First pass: Scan all units
        for i = 1, 40 do
            local unit = "nameplate"..i
            if UnitExists(unit) and UnitCanAttack("player", unit) then
                local guid = UnitGUID(unit)
                if guid then
                    local currentMark = GetRaidTargetIndex(unit)
                    currentEnemies[guid] = unit
                    
                    -- Get spell priority and info
                    local priority, spellName, endTime = getSpellPriority(unit)
                    if priority > 0 then
                        castingUnits[guid] = {
                            unit = unit,
                            guid = guid,
                            priority = priority,
                            spellName = spellName,
                            endTime = endTime,
                            distance = CheckInteractDistance(unit, 3) and 1 or 2,
                            currentMark = currentMark
                        }
                        castingEnemies[guid] = true
                        aura_env.castEndTimes[guid] = endTime
                    elseif IsRogueCCd(unit) then
                        if currentMark then
                            SetRaidTarget(unit, 0)
                            -- Remove from markedEnemies to allow promotion
                            for mark, data in pairs(markedEnemies) do
                                if data.guid == guid then
                                    markedEnemies[mark] = nil
                                    break
                                end
                            end
                        end
                    elseif currentMark == DIAMOND then
                        SetRaidTarget(unit, 0)
                        table.insert(unmarkedEnemies, {guid = guid, unit = unit})
                    elseif currentMark and currentMark ~= DIAMOND then
                        markedEnemies[currentMark] = {guid = guid, unit = unit}
                    else
                        table.insert(unmarkedEnemies, {guid = guid, unit = unit})
                    end
                end
            end
        end
        
        -- Select highest priority casting unit for diamond mark
        local selectedUnit = nil
        local highestPriority = 0
        local closestDistance = 3
        
        for guid, data in pairs(castingUnits) do
            if data.priority > highestPriority or 
            (data.priority == highestPriority and data.distance < closestDistance) then
                highestPriority = data.priority
                closestDistance = data.distance
                selectedUnit = data
            end
        end
        
        -- Apply diamond mark to highest priority target
        if selectedUnit then
            if selectedUnit.currentMark ~= DIAMOND then
                SetRaidTarget(selectedUnit.unit, DIAMOND)
            end
            markedEnemies[DIAMOND] = {guid = selectedUnit.guid, unit = selectedUnit.unit}
            
            -- Remove diamond from other casting units
            for guid, data in pairs(castingUnits) do
                if data.unit ~= selectedUnit.unit and data.currentMark == DIAMOND then
                    SetRaidTarget(data.unit, 0)
                    table.insert(unmarkedEnemies, {guid = guid, unit = data.unit})
                end
            end
        end
        
        -- Clean up mark tracking
        for guid in pairs(aura_env.marks) do
            if not currentEnemies[guid] then
                aura_env.marks[guid] = nil
                aura_env.castEndTimes[guid] = nil
            end
        end
        
        -- Handle mark promotion for non-casting units
        for i, highMark in ipairs(MARKS) do
            if not markedEnemies[highMark] then
                for j = i + 1, #MARKS do
                    local lowerMark = MARKS[j]
                    if markedEnemies[lowerMark] then
                        local target = markedEnemies[lowerMark]
                        if not castingEnemies[target.guid] then
                            SetRaidTarget(target.unit, highMark)
                            aura_env.marks[target.guid] = highMark
                            markedEnemies[highMark] = target
                            markedEnemies[lowerMark] = nil
                        end
                        break
                    end
                end
            end
        end
        
        -- Fill remaining marks
        for _, mark in ipairs(MARKS) do
            if not markedEnemies[mark] and #unmarkedEnemies > 0 then
                local target = table.remove(unmarkedEnemies, 1)
                if not castingEnemies[target.guid] then
                    SetRaidTarget(target.unit, mark)
                    aura_env.marks[target.guid] = mark
                end
            end
        end
        
        -- Update state for visualization
        allstates[""] = {
            changed = true,
            show = true,
            activeMarks = aura_env.marks
        }
        return true
    end
    return false
end